\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{okithm}[2018/11/06 v0.2]


% ======== Options ========
\RequirePackage{kvoptions}

\DeclareBoolOption[true]{thm}
\DeclareComplementaryOption{nothm}{thm}
\DeclareBoolOption[true]{alg}
\DeclareComplementaryOption{noalg}{alg}
\DeclareStringOption[section]{numberwithin}
\DeclareStringOption[long]{optstyle}
\ProcessKeyvalOptions*{}


% ======== Theorems ========

\ifokithm@thm
  \RequirePackage{amsthm}
  \RequirePackage{thmtools}
  
  \declaretheoremstyle[
    bodyfont=\normalfont\itshape,
    postheadspace=5pt,
    spaceabove=0.3\baselineskip,
    spacebelow=0.3\baselineskip,
  ]{thmstyle}

  \declaretheoremstyle[
    postheadspace=5pt,
    spaceabove=0.3\baselineskip,
    spacebelow=0.3\baselineskip,
  ]{defstyle}

  \declaretheoremstyle[
    postheadspace=5pt,
    spaceabove=0.3\baselineskip,
    spacebelow=0.3\baselineskip,
    qed=\qedsymbol,
  ]{exstyle}

  \declaretheoremstyle[
    headfont=\normalfont\itshape,
    postheadspace=5pt,
    spaceabove=0.3\baselineskip,
    spacebelow=0.3\baselineskip,
    qed=\qedsymbol,
  ]{proofstyle}

  \declaretheorem[name=Theorem,     style=thmstyle, numberwithin=\okithm@numberwithin]{theorem}
  \declaretheorem[name=Definition,  style=defstyle, sibling=theorem]{definition}
  \declaretheorem[name=Lemma,       style=thmstyle, sibling=theorem]{lemma}
  \declaretheorem[name=Proposition, style=thmstyle, sibling=theorem]{proposition}
  \declaretheorem[name=Corollary,   style=thmstyle, sibling=theorem]{corollary}
  \declaretheorem[name=Example,     style=exstyle,  sibling=theorem]{example}
  \declaretheorem[name=Remark,      style=defstyle, sibling=theorem]{remark}

  % proof
  \let\proof\@undefined
  \let\endproof\@undefined
  \declaretheorem[name=Proof, style=proofstyle, numbered=no]{proof}
\fi


% ======== Algorithm ========
\ifokithm@alg
  \RequirePackage{algorithm}
  \RequirePackage[noend]{algpseudocode}

  \algnewcommand\algorithmicinput{\makebox[\widthof{\textbf{Output}}][l]{\textbf{Input}}\textbf{:}}
  \algnewcommand\Input{\item[\algorithmicinput]}
  \algnewcommand\algorithmicoutput{\textbf{Output:}}
  \algnewcommand\Output{\item[\algorithmicoutput]}

  \algnewcommand\algorithmicto{\textbf{to}}
  \algdef{SE}[FOR]{ForTo}{EndFor}[2]{\algorithmicfor\ #1 \algorithmicto\ #2 \algorithmicdo}{\algorithmicend\ \algorithmicfor}\algtext*{EndFor}
\fi

% ======== Optimization Problem ========
\RequirePackage{array}
\RequirePackage{xkeyval}

\define@cmdkeys{Minimizekey}[optprob@]{name, variable}
\define@choicekey*{Minimizekey}{style}[\val]{short,long}{\def\optprob@style{\val}}

\def\okithm@makeoptprob#1#2#3#4#5{%
  % #1 : options
  % #2 : minimize
  % #3 : object function
  % #4 : subject to
  % #5 : constraints
  \setkeys{Minimizekey}{#1}%
  \begin{align}%
    \ifdefined\optprob@name%
      \text{\optprob@name}\quad%
  	\fi%
    \begin{array}{|cl}%
      \ifdefined\optprob@variable%
        $\underset{\optprob@variable}{\mathrm{#2}}$%
      \else%
        \text{#2}%
      \fi%
      &\hspace{-1em}$\begin{array}[t]{l}\displaystyle#3\end{array}$ \\
      \text{#4}%
      &\hspace{-1em}$\begin{array}[t]{>{\displaystyle}l<{}>{\displaystyle}l<{}}#5\end{array}$%
    \end{array}%
  \end{align}
  \let\optprob@name\undefined%
  \let\optprob@variable\undefined%
  \let\optprob@style\undefined%
}

\def\okithm@DeclareOptProb#1#2#3#4#5{%
  % #1 : name of the command
  % #2 : minimize
  % #3 : min
  % #4 : subject to
  % #5 : s.t.
  \newcommand#1[3][]{%
    \setkeys{Minimizekey}{##1}%
    \ifdefined\optprob@style\else
      \def\optprob@style{\okithm@optstyle}
    \fi
    \ifthenelse{\equal{\optprob@style}{long}}{%
      \okithm@makeoptprob{##1}{#2}{##2}{#4}{##3}%
    }{%
      \okithm@makeoptprob{##1}{#3}{##2}{#5}{##3}%
    }%
  }%
}

\okithm@DeclareOptProb{\Minimize}{minimize}{min}{subject to}{s.t.}
\okithm@DeclareOptProb{\Maximize}{maximize}{max}{subject to}{s.t.}

% ======== Enumeration ========
\RequirePackage{enumitem}

\setlist{leftmargin=*}
\setlist[1]{labelindent=\parindent}
